include:
  - template: Terraform/Base.latest.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Terraform/Base.latest.gitlab-ci.yml
  - template: Jobs/SAST-IaC.latest.gitlab-ci.yml   # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Jobs/SAST-IaC.latest.gitlab-ci.yml
  - project: 'packages-and-registries/gitlab-ci.yml'
    file:    '/vault/Vault.tools.gitlab-ci.yml'

.before-script-secrets-vars: &before-script-secrets-vars
    - cd $TF_ROOT
    - ${CI_PROJECT_DIR}/vault_secrets.sh secrets/${ENVIRONMENT}.yml >.secrets && . .secrets && rm .secrets
    - >
      if [ -f "${CI_PROJECT_DIR}/environment/default.env" ]; then
        set -a && source ${CI_PROJECT_DIR}/environment/default.env && set +a
      fi
    - >
      if [ -f "${CI_PROJECT_DIR}/environment/${ENVIRONMENT}.env" ]; then
        set -a && source ${CI_PROJECT_DIR}/environment/${ENVIRONMENT}.env && set +a
      fi

.fmt:
  extends: .terraform:fmt
  rules:
    - when: always

.validate:
  extends: .terraform:validate
  rules:
    - when: always

.build:
  extends: .terraform:build
  needs:
    - vault_tools_sh
    - validate
  dependencies:
    - vault_tools_sh
  before_script:
    - *before-script-secrets-vars
  rules:
    - when: on_success

.deploy:
  extends: .terraform:deploy
  needs:
    - vault_tools_sh
    - build
  dependencies:
    - vault_tools_sh
    - build
  environment:
    name:         $ENVIRONMENT
    auto_stop_in: $AUTO_STOP_IN
    on_stop:      destroy
  before_script:
    - *before-script-secrets-vars
  rules:
    - if: $CI_COMMIT_REF_PROTECTED == "true"
      when: on_success

.destroy:
  extends: .terraform:destroy
  needs:
    - vault_tools_sh
    - validate
  dependencies:
    - vault_tools_sh
  environment:
    name:   $ENVIRONMENT
    action: stop
  before_script:
    - *before-script-secrets-vars
  rules:
    - if: $CI_COMMIT_REF_PROTECTED == "true"
      when: manual
